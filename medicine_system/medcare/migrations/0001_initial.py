# Generated by Django 3.2.3 on 2022-02-24 04:50

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_url', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=100, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'user',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Age',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter age', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'age',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'booking',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter product brand', max_length=100)),
                ('image', models.ImageField(default='/brand_pics/default.png', upload_to='brand_pics')),
                ('advert_image', models.ImageField(default='/brand_adverts/default.jpg', upload_to='brand_adverts')),
                ('website', models.CharField(blank=True, max_length=255)),
                ('is_featured', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'brand',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='quantity')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter product subcategory', max_length=200)),
                ('image', models.ImageField(default='/category_pics/default.png', upload_to='category_pics')),
                ('advert_image', models.ImageField(default='/category_adverts/default.png', upload_to='category_adverts')),
                ('is_popular', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'category',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', models.CharField(max_length=100, null=True)),
                ('code', models.CharField(max_length=50, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('coupon_expired', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('minimum_order', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'coupon',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter product form', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'form',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter gender name', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'gender',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter navbar name', max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'navbar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', ckeditor.fields.RichTextField(help_text='Enter a content of the new')),
                ('image', models.ImageField(default='/news_pics/default.jpg', upload_to='news_pics')),
                ('type', models.CharField(choices=[('News', 'News'), ('Mom & Baby', 'Mom & Baby'), ('Beauty', 'Beauty'), ('Family & Gender', 'Family & Gender'), ('Nutrition', 'Nutrition'), ('Covid-19', 'Covid-19'), ('Common Diseases', 'Common Diseases'), ('Chronic Diseases', 'Chronic Diseases')], max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'new',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_price', models.FloatField(blank=True, default=0, null=True)),
                ('shipping_address', models.CharField(help_text='Enter your shipping address (e.g. Danang, VietNam)', max_length=200, null=True)),
                ('phone_number', models.CharField(help_text='Enter your phone number (e.g. 840247xxx )', max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('W', 'waiting'), ('A', 'approved'), ('R', 'rejected')], default='W', max_length=2)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'verbose_name_plural': 'orders',
                'db_table': 'order',
                'ordering': ['-created_at'],
                'permissions': (('can_mark_returned', 'Set order as returned'),),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=200)),
                ('image', models.ImageField(default='/product_pics/default.png', upload_to='product_pics')),
                ('description', ckeditor.fields.RichTextField(help_text='Enter a brief description of the product')),
                ('price', models.FloatField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=1, null=True)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('discount_expired', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'report',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'request',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('content', models.TextField(max_length=1000)),
                ('rate', models.IntegerField(blank=True, default=5, null=True, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
            ],
            options={
                'db_table': 'review',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tag',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UseCoupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('saved', models.BooleanField(default=False)),
                ('used', models.BooleanField(default=False)),
                ('applied', models.BooleanField(default=False)),
                ('coupon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medcare.coupon')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_tag_name'),
        ),
        migrations.AddField(
            model_name='review',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medcare.product'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='report',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medcare.review'),
        ),
        migrations.AddField(
            model_name='report',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='age',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.age'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='form',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.form'),
        ),
        migrations.AddField(
            model_name='product',
            name='gender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.gender'),
        ),
        migrations.AddField(
            model_name='product',
            name='tag',
            field=models.ManyToManyField(blank=True, null=True, to='medcare.Tag'),
        ),
        migrations.AddField(
            model_name='order',
            name='coupon',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.coupon'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='form',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_form_name'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medcare.product'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='review',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medcare.review'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='navbar',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medcare.navbar'),
        ),
        migrations.AddField(
            model_name='cart',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medcare.product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='brand',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_brand_name'),
        ),
        migrations.AddField(
            model_name='booking',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medcare.order'),
        ),
        migrations.AddField(
            model_name='booking',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='medcare.product'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
